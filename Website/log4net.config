<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net"/>
	</configSections>

	<log4net>
    <!--控制级别，由低到高: ALL|DEBUG|INFO|WARN|ERROR|FATAL|OFF-->
    <!--比如定义级别为INFO，则INFO级别向下的级别，比如DEBUG日志将不会被记录-->
    <!--如果没有定义LEVEL的值，则缺省为DEBUG-->
    <logger name="DebugSQLLog">
      <level value="all"></level>
			<appender-ref ref="ADONetAppender"/>
		</logger>
    <logger name="DebugFileLog">
      <level value="all"></level>
      <appender-ref ref="RollingFileAppender"/>
    </logger>
		<!--SQL数据库-->
		<appender name="ADONetAppender" type="log4net.Appender.ADONetAppender">

			<bufferSize value="1"/>

			<!-- SQL数据源 ，本地安装SQL客户端-->
			<connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>

			<!-- SQL连接字符串-->
			<connectionString value="Data Source=(LocalDB)\.\IIS_DB;Initial Catalog=Custom;Integrated Security=SSPI;AttachDBFilename=|DataDirectory|CustomData.mdf" />

			<commandText value="INSERT INTO Sys_DebugLog ([LogLevel],[Location],[Message],[Exception],[AddTime]) VALUES (@log_level,@location, @message,@exception, @AddTime)"/>

			<parameter>
				<parameterName value="@AddTime"/>
				<dbType value="DateTime"/>
				<layout type="log4net.Layout.RawTimeStampLayout"/>
			</parameter>

			<parameter>
				<parameterName value="@log_level"/>
				<dbType value="String"/>
				<size value="20"/>
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%level"/>
				</layout>
			</parameter>

			<parameter>
				<parameterName value="@message"/>
				<dbType value="String"/>
				<size value="500"/>
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%message"/>
				</layout>
			</parameter>

			<parameter>
				<parameterName value="@location" />
				<dbType value="String" />
				<size value="500" />
				<layout type="log4net.Layout.PatternLayout">
					<conversionPattern value="%location" />
				</layout>
			</parameter>

			<parameter>
				<parameterName value="@exception" />
				<dbType value="String" />
				<size value="10000" />
				<layout type="log4net.Layout.ExceptionLayout" />
			</parameter>

		</appender>

    <!--文件写入-->
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <!--日志文件名开头-->
      <file value="./Log/"/>
      <!--不加utf-8编码格式，中文字符将显示成乱码-->
      <param name="Encoding" value="utf-8" />
      <!--多线程时采用最小锁定-->
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <!--日期的格式，每天换一个文件记录，如不设置则永远只记录一天的日志，需设置-->
      <datePattern value="yyyy-MM-dd&quot;log.txt&quot;"/>
      <!--名称是否可以更改 为false为可以更改-->
      <param name="StaticLogFileName" value="false"/>
      <!--是否追加到文件,默认为true，通常无需设置-->
      <appendToFile value="true"/>
      
      <!--变换的形式为日期，这种情况下每天只有一个日志-->
      <RollingStyle value="Date"/>
      <!--每天记录的日志文件个数，与maximumFileSize配合使用-->
      <MaxSizeRollBackups value="10"/>
      <!--每个日志文件的最大大小,不要使用小数,否则会一直写入当前日志,可用的单位:KB|MB|GB-->
      <maximumFileSize value="100MB"/>
      
      <!--日志格式-->
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%nDateTime:%date %nLevel:%level %nlocation:%location %nMessage:%message %nException:%exception %n-------------------------"/>
        <!--<conversionPattern 
          value="
          appdomain:%appdomain%n exception:%exception%n file:%file%n 
          identity:%identity%n location:%location%n level:%level%n line:%line%n 
          logger:%logger%n message:%message%n method:%method%n stacktrace:%stacktrace%n stacktracedetail:%stacktracedetail%n 
          timestamp:%timestamp%n thread:%thread%n type:%type%n"/>-->
      </layout>
    </appender>
	</log4net>

	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0"/>
	</startup>

</configuration>