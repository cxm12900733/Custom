@{
    var ButtonList = this.MenuTree.Where(o => (o.MenuType == MenuType.TableButton || o.MenuType == MenuType.RowButton) && o.ParentID == 3).ToList();
    var TableButtonList = this.MenuTree.Where(o => o.MenuType == MenuType.TableButton && o.ParentID == 3).ToList();
    var RowButtonList = this.MenuTree.Where(o => o.MenuType == MenuType.RowButton && o.ParentID == 3).Select(o => new {o.ID, o.Name, o.Method,o.Icon,o.Url }).ToList();
    string RowButtonJson = Newtonsoft.Json.JsonConvert.SerializeObject(RowButtonList);
}
<table id="tableList" class="easyui-datagrid" toolbar="#tb" title="菜单管理" iconcls="icon-new" data-options="height:$(window).height()-25">
    <thead>
        <tr>
            <th data-options="field:'ck',width:20,checkbox:true"></th>
            <th data-options="field:'Name',width:150">名称</th>
            <th data-options="field:'Url',width:150">Url</th>
            <th data-options="field:'MenuType',width:40,formatter:MenuTypeName">类型</th>
            <th data-options="field:'Control',width:80">控制器</th>
            <th data-options="field:'Method',width:80">操作</th>
            <th data-options="field:'State',width:30,formatter:show.StateName">状态</th>
            <th data-options="field:'Sort',width:30">排序</th>
            <th data-options="field:'AddTime',width:120,formatter:show.formatDate">添加时间</th>
            <th data-options="field:'Operate',width:60">操作</th>
        </tr>
    </thead>
</table>
<div id="tb">
    @foreach (var item in TableButtonList)
    {
        <a class="easyui-linkbutton" iconcls="@(item.Icon)" plain="true" onclick="javascript: @(item.Method)('@(item.Url)','@(item.Name)','@(item.Icon)')">@(item.Name)</a>
    }
</div>

<div id="ModelForm"></div>
@section Scripts{
<script>
    var rowButtons = @(Html.Raw(RowButtonJson));
    $('#tableList').treegrid({    
        url:'/Menu/TableList',
        idField:'ID',
        treeField:'Name',
        fitColumns:true,
        striped:true,
        checkOnSelect:false,
        selectOnCheck:false,
        loadFilter :function(data)
        {
            data = UI.RowButton(rowButtons,data);
            return UI.LoadTreegrId(data);
        },
        onLoadSuccess: function(row, data)
        {
            UI.ShowRowButton(rowButtons,data);
        }  
    });  

    function Add(url,title,iconCls)
    {
        var Selected = $('#tableList').treegrid('getSelections');
        if(Selected.length == 1){ 
            url += "?ParentID="+ Selected[0].ID 
        }
        UI.Windows({
            id:"ModelForm",
            url:url,
            width:580,
            height:350,
            iconCls:iconCls,
            title:title
        });
    }

    function Edit(url,title,iconCls,ID)
    {
        if(ID == 1)
        {
            $.messager.alert('提示信息','不能编辑根目录','warning');
            return;
        }

        UI.Windows({
            id:"ModelForm",
            url:url + "?Id="+ ID,
            width:580,
            height:350,
            iconCls:iconCls,
            title:title
        });
    }

    function Del(url,title,iconCls)
    {
        var alertMessage = "";
        var valArr = new Array;
        var Selected = $('#tableList').treegrid('getChecked');
        if(Selected.length <= 0)
        {
            $.messager.alert('提示信息','请至少选择一行数据！','warning');
            return;
        }
        $.each(Selected,function(i, n){
            if(n.children != null)
            {
                alertMessage = '请先清空"'+n.Name+'"下面的子项';
                return;
            }
            if(n.ID == 1)
            {
                alertMessage = '根目录不能删除';
                return;
            }
            valArr[i] = n.ID;
        });
        if(alertMessage != "")
        {
            $.messager.alert('提示信息',alertMessage,'warning');
            return;
        }
        var ids = valArr.join(',');
        $.messager.confirm('确认对话框',"确认要删除数据？", function(r){
            if (r){
                $.post(url, { ids: ids},function(result){
                    if(result.data.IsSuccess)
                    {
                        $("#tableList").treegrid('reload');
                    }
                    $.messager.alert('提示信息',result.data.Message,'info');
                },'json');
            }
        });
    }

    function MenuTypeName(value,row,index)
    {
        var returl = "";
        switch(value)
        {
            case 1:
                returl = "目录"
                break;
            case 2:
                returl = "介面"
                break;
            case 3:
                returl = "表按钮"
                break;
            case 4:
                returl = "权限"
                break;
            case 5:
                returl = "行按钮"
                break;
        }
        return returl;
    }

</script>
}