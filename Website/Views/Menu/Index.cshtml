@{
    var ButtonList = this.MenuTree.Where(o => (o.MenuType == MenuType.TableButton || o.MenuType == MenuType.RowButton) && o.ParentID == 3).ToList();
    var TableButtonList = this.MenuTree.Where(o => o.MenuType == MenuType.TableButton && o.ParentID == 3).ToList();
    var RowButtonList = this.MenuTree.Where(o => o.MenuType == MenuType.RowButton && o.ParentID == 3).Select(o => new { o.Name, o.Method }).ToList();
    string RowButtonJson = Newtonsoft.Json.JsonConvert.SerializeObject(RowButtonList);
}
<table id="tableList" class="easyui-treegrid" style="width:100%;" toolbar="#tb" title="菜单管理" iconcls="icon-new"
       data-options="
    url:'/Menu/TableList',
    idField:'ID',
    treeField:'Name',
    singleSelect:false,
    fitColumns:true,
    striped:true,
    loadFilter :function(data)
    {
       return UI.LoadTreegrId(data);
    },
    onLoadSuccess: function(row, data)
    {
       //$(this).treegrid('collapseAll');
       //var root = $(this).treegrid('getRoot');
       //$(this).treegrid('expand',root.ID);
    }
    ">
    <thead>
        <tr>
            <th data-options="field:'ck',checkbox:true"></th>
            <th data-options="field:'Name'">名称</th>
            <th data-options="field:'Url'">Url</th>
            <th data-options="field:'MenuType',formatter:MenuTypeName">类型</th>
            <th data-options="field:'Control',width:80">控制器</th>
            <th data-options="field:'Method',width:80">操作</th>
            <th data-options="field:'State',width:60,formatter:show.StateName">状态</th>
            <th data-options="field:'Sort',width:60">排序</th>
            <th data-options="field:'Describe'">描述</th>
            <th data-options="field:'AddTime',width:180,formatter:show.formatDate">添加时间</th>
            <th data-options="field:'X',width:60,formatter:show.RowButton">操作</th>
        </tr>
    </thead>
    <div id="tb">
        @foreach (var item in TableButtonList)
        {
            <a class="easyui-linkbutton" iconcls="@(item.Icon)" plain="true" onclick="javascript: @(item.Method)('@(item.Url)','@(item.Name)','@(item.Icon)')">@(item.Name)</a>
        }
    </div>
</table>
<div id="ModelForm"></div>
@section Scripts{
<script>
    var rowButtons = @(Html.Raw(RowButtonJson));

    function Add(url,title,iconCls)
    {
        var Selected = $('#tableList').treegrid('getSelections');
        if(Selected.length == 1){ 
            url += "?ParentID="+ Selected[0].ID 
        }
        //else if(Selected.length > 1)
        //{
        //    $.messager.alert('提示信息','请选择一行数据！','warning');
        //    return;
        //}
        UI.Windows({
            id:"ModelForm",
            url:url,
            width:580,
            height:350,
            iconCls:iconCls,
            title:title
        });
    }

    function Edit(url,title,iconCls)
    {
        var Selected = $('#tableList').treegrid('getSelections');
        if(Selected == null)
        {
            $.messager.alert('提示信息','请选择一行数据！','warning');
            return;
        }
        if(Selected[0].ID == 1)
        {
            $.messager.alert('提示信息','不能编辑根目录','warning');
            return;
        }

        UI.Windows({
            id:"ModelForm",
            url:url + "?Id="+ Selected[0].ID,
            width:580,
            height:350,
            iconCls:iconCls,
            title:title
        });
    }

    function Del(url,title,iconCls)
    {
        var Selected = $('#tableList').treegrid('getSelections');
        var ids = "";
        if(Selected == null)
        {
            $.messager.alert('提示信息','请至少选择一行数据！','warning');
            return;
        }
        var alertMessage = "";
        $.each( Selected, function(i, n){
            if(n.children != null)
            {
                alertMessage = '请先清空"'+n.Name+'"下面的子项';
                return;
            }
            if(n.ID == 1)
            {
                alertMessage = '根目录不能删除';
                return;
            }
            ids += n.ID + ",";
        });
        if(alertMessage != "")
        {
            $.messager.alert('提示信息',alertMessage,'warning');
            return;
        }
        ids = ids.substr(0, ids.length-1);
        $.messager.confirm('确认对话框',"确认要删除数据？", function(r){
            if (r){
                $.post(url, { ids: ids},function(result){
                    if(result.data.IsSuccess)
                    {
                        $("#tableList").treegrid('reload');
                    }
                    $.messager.alert('提示信息',result.data.Message,'info');
                },'json');
            }
        });
    }

    function MenuTypeName(value,row,index)
    {
        var returl = "";
        switch(value)
        {
            case 1:
                returl = "目录"
                break;
            case 2:
                returl = "介面"
                break;
            case 3:
                returl = "表按钮"
                break;
            case 4:
                returl = "权限"
                break;
            case 5:
                returl = "行按钮"
                break;
        }
        return returl;
    }

</script>
}